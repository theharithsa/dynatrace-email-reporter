name: Build and deploy Node.js app with OpenTelemetry tracing

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üßæ Checkout Code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set Secrets as Env Variables
        run: |
          echo "DYNATRACE_API_TOKEN=${{ secrets.DYNATRACE_API_TOKEN }}" >> $GITHUB_ENV
          echo "DYNATRACE_OTLP_URL=${{ secrets.DYNATRACE_OTLP_URL }}" >> $GITHUB_ENV
          echo "DYNATRACE_LOG_INGEST_URL=${{ secrets.DYNATRACE_LOG_INGEST_URL }}" >> $GITHUB_ENV

      - name: ‚¨áÔ∏è Install Trace Dependencies
        run: |
          npm install @opentelemetry/sdk-node \
                      @opentelemetry/api \
                      @opentelemetry/resources \
                      @opentelemetry/semantic-conventions \
                      @opentelemetry/exporter-trace-otlp-proto \
                      dotenv

      - name: üèóÔ∏è Build and Trace All Steps
        run: node pipeline-trace.js Build

      - name: ‚¨ÜÔ∏è Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: üßæ Checkout Code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set Secrets as Env Variables
        run: |
          echo "DYNATRACE_API_TOKEN=${{ secrets.DYNATRACE_API_TOKEN }}" >> $GITHUB_ENV
          echo "DYNATRACE_OTLP_URL=${{ secrets.DYNATRACE_OTLP_URL }}" >> $GITHUB_ENV
          echo "DYNATRACE_LOG_INGEST_URL=${{ secrets.DYNATRACE_LOG_INGEST_URL }}" >> $GITHUB_ENV

      - name: ‚¨áÔ∏è Install Trace Dependencies
        run: |
          npm install @opentelemetry/sdk-node \
                      @opentelemetry/api \
                      @opentelemetry/resources \
                      @opentelemetry/semantic-conventions \
                      @opentelemetry/exporter-trace-otlp-proto \
                      dotenv

      - name: üì• Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: üîê Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üöÄ Deploy and Trace All Steps
        run: node pipeline-trace.js Deploy

      # The actual Azure deployment is done inside pipeline-trace.js for tracing
      # If you want to run the deploy action separately and just trace the step, you can do:
      # - name: 'Deploy to Azure Web App'
      #   id: deploy-to-webapp
      #   uses: azure/webapps-deploy@v3
      #   with:
      #     app-name: 'gen3emailreporting'
      #     slot-name: 'Production'
      #     package: .
      #     publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BC4BABCD01F44C619462527428A40790 }}
