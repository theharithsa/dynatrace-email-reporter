name: Build and deploy Node.js app with OpenTelemetry tracing

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      trace_id: ${{ steps.start_trace.outputs.trace_id }}
      parent_span_id: ${{ steps.start_trace.outputs.parent_span_id }}

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Set Secrets as Env Variables
        run: |
          echo "DYNATRACE_API_TOKEN=${{ secrets.DYNATRACE_API_TOKEN }}" >> $GITHUB_ENV
          echo "DYNATRACE_OTLP_URL=${{ secrets.DYNATRACE_OTLP_URL }}" >> $GITHUB_ENV
          echo "DYNATRACE_LOG_INGEST_URL=${{ secrets.DYNATRACE_LOG_INGEST_URL }}" >> $GITHUB_ENV

      - name: ⬇️ Install Trace CLI Dependencies
        run: |
          npm install @opentelemetry/sdk-node \
                      @opentelemetry/api \
                      @opentelemetry/resources \
                      @opentelemetry/semantic-conventions \
                      @opentelemetry/exporter-trace-otlp-proto \
                      node-fetch \
                      dotenv \
                      winston

      - id: start_trace
        name: 🚀 Start Build Trace
        run: |
          node trace-cli.js start --step=build > trace_output.txt
          cat trace_output.txt
          echo "trace_id=$(grep trace_id trace_output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT
          echo "parent_span_id=$(grep parent_span_id trace_output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - id: install_start
        name: 📦 Install Dependencies (Start)
        run: |
          node trace-cli.js start-child --step="Install Dependencies" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --parent-span-id=${{ steps.start_trace.outputs.parent_span_id }} > output.txt
          cat output.txt
          echo "span_id=$(grep span_id output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: 📦 Install Dependencies (Execute)
        run: npm install

      - name: 📦 Install Dependencies (End)
        run: |
          node trace-cli.js end-child --step="Install Dependencies" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --span-id=${{ steps.install_start.outputs.span_id }}

      - id: build_start
        name: 🧪 Build and Test (Start)
        run: |
          node trace-cli.js start-child --step="Build and Test" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --parent-span-id=${{ steps.start_trace.outputs.parent_span_id }} > output.txt
          cat output.txt
          echo "span_id=$(grep span_id output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: 🧪 Build and Test (Execute)
        run: |
          npm run build --if-present
          npm run test --if-present

      - name: 🧪 Build and Test (End)
        run: |
          node trace-cli.js end-child --step="Build and Test" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --span-id=${{ steps.build_start.outputs.span_id }}

      - id: zip_start
        name: 🗜️ Zip Release (Start)
        run: |
          node trace-cli.js start-child --step="Zip Artifact" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --parent-span-id=${{ steps.start_trace.outputs.parent_span_id }} > output.txt
          cat output.txt
          echo "span_id=$(grep span_id output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: 🗜️ Zip Release (Execute)
        run: zip release.zip . -r -x "node_modules/*" -x ".git/*"

      - name: 🗜️ Zip Release (End)
        run: |
          node trace-cli.js end-child --step="Zip Artifact" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --span-id=${{ steps.zip_start.outputs.span_id }}

      - name: ⬆️ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

      - name: 🛑 End Build Trace
        run: |
          node trace-cli.js end --step=Build \
            --trace-id=${{ steps.start_trace.outputs.trace_id }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Set Secrets as Env Variables
        run: |
          echo "DYNATRACE_API_TOKEN=${{ secrets.DYNATRACE_API_TOKEN }}" >> $GITHUB_ENV
          echo "DYNATRACE_OTLP_URL=${{ secrets.DYNATRACE_OTLP_URL }}" >> $GITHUB_ENV
          echo "DYNATRACE_LOG_INGEST_URL=${{ secrets.DYNATRACE_LOG_INGEST_URL }}" >> $GITHUB_ENV

      - name: ⬇️ Install Trace CLI Dependencies
        run: |
          npm install @opentelemetry/sdk-node \
                      @opentelemetry/api \
                      @opentelemetry/resources \
                      @opentelemetry/semantic-conventions \
                      @opentelemetry/exporter-trace-otlp-proto \
                      node-fetch \
                      dotenv \
                      winston

      - id: start_trace
        name: 🚀 Start Deploy Trace
        run: |
          node trace-cli.js start --step=deploy > trace_output.txt
          cat trace_output.txt
          echo "trace_id=$(grep trace_id trace_output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT
          echo "parent_span_id=$(grep parent_span_id trace_output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: 📥 Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - id: unzip_start
        name: 📂 Unzip Artifact (Start)
        run: |
          node trace-cli.js start-child --step="Unzip Artifact" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --parent-span-id=${{ steps.start_trace.outputs.parent_span_id }} > output.txt
          cat output.txt
          echo "span_id=$(grep span_id output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: 📂 Unzip Artifact (Execute)
        run: unzip -o release.zip

      - name: 📂 Unzip Artifact (End)
        run: |
          node trace-cli.js end-child --step="Unzip Artifact" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --span-id=${{ steps.unzip_start.outputs.span_id }}

      - id: deploy_start
        name: 🚀 Deploy to Azure (Start)
        run: |
          node trace-cli.js start-child --step="Azure Deployment" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --parent-span-id=${{ steps.start_trace.outputs.parent_span_id }} > output.txt
          cat output.txt
          echo "span_id=$(grep span_id output.txt | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: 🚀 Deploy to Azure (Execute)
        run: |
          echo "Deploying to Azure..."
          echo "Deployment complete."

      - name: 🚀 Deploy to Azure (End)
        run: |
          node trace-cli.js end-child --step="Azure Deployment" \
            --trace-id=${{ steps.start_trace.outputs.trace_id }} \
            --span-id=${{ steps.deploy_start.outputs.span_id }}

      - name: 🛑 End Deploy Trace
        run: |
          node trace-cli.js end --step=Deploy \
            --trace-id=${{ steps.start_trace.outputs.trace_id }}
