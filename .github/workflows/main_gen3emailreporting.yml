name: Build and Deploy with Dynatrace Tracing

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      trace_id: ${{ steps.start_trace.outputs.trace_id }}
      parent_span_id: ${{ steps.start_trace.outputs.parent_span_id }}

    steps:
      - name: 📜 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Set Secrets as Env Variables
        run: |
          echo "DYNATRACE_API_TOKEN=${{ secrets.DYNATRACE_API_TOKEN }}" >> $GITHUB_ENV
          echo "DYNATRACE_OTLP_URL=${{ secrets.DYNATRACE_OTLP_URL }}" >> $GITHUB_ENV
          echo "DYNATRACE_LOG_INGEST_URL=${{ secrets.DYNATRACE_LOG_INGEST_URL }}" >> $GITHUB_ENV

      - name: ⬇️ Install Trace CLI Dependencies
        run: npm install @opentelemetry/sdk-node @opentelemetry/api @opentelemetry/resources @opentelemetry/semantic-conventions @opentelemetry/exporter-trace-otlp-proto dotenv node-fetch winston

      - name: 🚀 Start Build Trace
        id: start_trace
        run: |
          TRACE_OUTPUT=$(node trace-cli.js start --step="Build Start" --endpoint="build")
          echo "$TRACE_OUTPUT"
          echo "$TRACE_OUTPUT" | grep trace_id | sed 's/trace_id=//' | xargs -I{} echo "trace_id={}" >> $GITHUB_OUTPUT
          echo "$TRACE_OUTPUT" | grep parent_span_id | sed 's/parent_span_id=//' | xargs -I{} echo "parent_span_id={}" >> $GITHUB_OUTPUT

      - name: 💼 Install Dependencies
        run: |
          node trace-cli.js start-child --step="Install Dependencies" --trace-id="${{ steps.start_trace.outputs.trace_id }}" --parent-span-id="${{ steps.start_trace.outputs.parent_span_id }}" --endpoint="build"
          npm install
          node trace-cli.js end-child --step="Install Dependencies" --trace-id="${{ steps.start_trace.outputs.trace_id }}"

      - name: 🧐 Build and Test
        run: |
          node trace-cli.js start-child --step="Build and Test" --trace-id="${{ steps.start_trace.outputs.trace_id }}" --parent-span-id="${{ steps.start_trace.outputs.parent_span_id }}" --endpoint="build"
          npm run build --if-present
          npm run test --if-present
          node trace-cli.js end-child --step="Build and Test" --trace-id="${{ steps.start_trace.outputs.trace_id }}"

      - name: 📋 Zip Artifact
        run: |
          node trace-cli.js start-child --step="Zip Artifact" --trace-id="${{ steps.start_trace.outputs.trace_id }}" --parent-span-id="${{ steps.start_trace.outputs.parent_span_id }}" --endpoint="build"
          zip release.zip . -r -x "node_modules/*" -x ".git/*"
          node trace-cli.js end-child --step="Zip Artifact" --trace-id="${{ steps.start_trace.outputs.trace_id }}"

      - name: ⬆️ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

      - name: 🛑 End Build Trace
        run: node trace-cli.js end --step="Build" --trace-id="${{ steps.start_trace.outputs.trace_id }}" --endpoint="build"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📜 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Set Secrets as Env Variables
        run: |
          echo "DYNATRACE_API_TOKEN=${{ secrets.DYNATRACE_API_TOKEN }}" >> $GITHUB_ENV
          echo "DYNATRACE_OTLP_URL=${{ secrets.DYNATRACE_OTLP_URL }}" >> $GITHUB_ENV
          echo "DYNATRACE_LOG_INGEST_URL=${{ secrets.DYNATRACE_LOG_INGEST_URL }}" >> $GITHUB_ENV

      - name: ⬇️ Install Trace CLI Dependencies
        run: npm install @opentelemetry/sdk-node @opentelemetry/api @opentelemetry/resources @opentelemetry/semantic-conventions @opentelemetry/exporter-trace-otlp-proto dotenv node-fetch winston

      - name: 🚀 Start Deploy Trace
        run: |
          node trace-cli.js start --step="Deploy Start" --endpoint="deploy"

      - name: 📥 Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: 📂 Unzip Artifact
        run: |
          node trace-cli.js start-child --step="Unzip Artifact" --trace-id="${{ needs.build.outputs.trace_id }}" --parent-span-id="${{ needs.build.outputs.parent_span_id }}" --endpoint="deploy"
          unzip -o release.zip
          node trace-cli.js end-child --step="Unzip Artifact" --trace-id="${{ needs.build.outputs.trace_id }}"

      - name: 🚀 Deploy to Azure
        run: |
          node trace-cli.js start-child --step="Azure Deployment" --trace-id="${{ needs.build.outputs.trace_id }}" --parent-span-id="${{ needs.build.outputs.parent_span_id }}" --endpoint="deploy"
          echo "Deploying to Azure..."
          echo "Deployment done"
          node trace-cli.js end-child --step="Azure Deployment" --trace-id="${{ needs.build.outputs.trace_id }}"

      - name: 🛑 End Deploy Trace
        run: node trace-cli.js end --step="Deploy" --trace-id="${{ needs.build.outputs.trace_id }}" --endpoint="deploy"
